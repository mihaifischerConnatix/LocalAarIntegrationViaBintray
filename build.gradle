apply plugin: 'com.android.library'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.2.9"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.11.1"


}

repositories {
    mavenCentral()
    jcenter()

    flatDir {
        dirs 'libs'
    }
}

ext {
    bintrayRepo = 'ConnatixPlayer'
    bintrayName = 'ConnatixPlayerSDK'

    publishedGroupId = 'com.connatix.sdk'
    libraryName = 'ConnatixPlayer'
    artifact = 'connatixplayersdk'

    libraryDescription = 'Connatix Player SDK for Android.'

    siteUrl = 'https://www.connatix.com'
    gitUrl = 'https://gitlab.com/Connatix/Connatix.AndroidSDK'

    libraryVersion = '1.4.0'

    developerId = 'cnxmf'
    developerName = 'Connatix'
    developerEmail = 'android-support@connatix.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]

    dependencyGroupId = 'org.jetbrains.kotlinx'
    dependencyArtifactId = 'kotlinx-serialization-runtime'
    dependencyVersion = '0.11.1'

    omSDKUrl = 'https://dl.bintray.com/connatix/ConnatixPlayer/:omsdk-android-1.3.1-release.aar'
}

group = publishedGroupId
version = libraryVersion

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId publishedGroupId
            artifactId artifact

            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            dependencies {
                dependency {
                    groupId dependencyGroupId
                    artifactId dependencyArtifactId
                    version dependencyVersion
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}


Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        dryRun = false
        publish = true
        override = false
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}
